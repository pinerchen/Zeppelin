{"paragraphs":[{"text":"%dep\r\nz.load(\"org.scalanlp:jblas:1.2.1\")\r\n","user":"anonymous","dateUpdated":"2018-12-17T02:21:33+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@40d95680\n"}]},"apps":[],"jobName":"paragraph_1545011792800_-1696542066","id":"20181212-015843_1688763497","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:21:33+0000","dateFinished":"2018-12-17T02:21:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:189283"},{"text":"// 导入jblas库中的矩阵类\nimport org.jblas.DoubleMatrix\n// 定义相似度函数\ndef cosineSimilarity(vec1: DoubleMatrix, vec2: DoubleMatrix): Double = {\n    vec1.dot(vec2) / (vec1.norm2() * vec2.norm2())\n}\n","user":"anonymous","dateUpdated":"2018-12-17T02:21:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.jblas.DoubleMatrix\ncosineSimilarity: (vec1: org.jblas.DoubleMatrix, vec2: org.jblas.DoubleMatrix)Double\n"}]},"apps":[],"jobName":"paragraph_1545011792804_1090251505","id":"20181212-015920_1065716449","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:21:44+0000","dateFinished":"2018-12-17T02:22:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189284"},{"text":"import java.io.File\nimport scala.io.Source\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\n\nimport org.apache.spark.ml.fpm.FPGrowth\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.mllib.evaluation.RankingMetrics\n\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.functions.explode\nimport org.apache.spark.sql.{DataFrame, Dataset,SparkSession}\n\nimport org.apache.spark.mllib.recommendation.Rating\nimport org.apache.spark.mllib.recommendation.ALS\nimport org.apache.spark.mllib.recommendation.MatrixFactorizationModel\nimport org.apache.spark.sql.Row\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.rdd.RDD","user":"anonymous","dateUpdated":"2018-12-17T02:22:10+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import java.io.File\nimport scala.io.Source\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport org.apache.spark.ml.fpm.FPGrowth\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.mllib.evaluation.RankingMetrics\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.functions.explode\nimport org.apache.spark.sql.{DataFrame, Dataset, SparkSession}\nimport org.apache.spark.mllib.recommendation.Rating\nimport org.apache.spark.mllib.recommendation.ALS\nimport org.apache.spark.mllib.recommendation.MatrixFactorizationModel\nimport org.apache.spark.sql.Row\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.rdd.RDD\n"}]},"apps":[],"jobName":"paragraph_1545011792805_333691542","id":"20181212-015934_389368932","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:22:10+0000","dateFinished":"2018-12-17T02:22:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189285"},{"text":"//raw dataset\nval transaction = spark.read.option(\"header\",\"true\").csv(\"s3://input-smart-find/Quotations-110818-S.csv\").select($\"Quotation: Quotation ID\".alias(\"user\"), $\"Product: Product Family\".alias(\"product\"),$\"Display Quantity\".alias(\"number\")).groupBy(\"user\",\"product\").agg(sum(\"number\").alias(\"rating\")).toDF()\n val product_description = spark.read.option(\"header\",\"true\").csv(\"s3://input-smart-find/products - 110818-s.csv\").select($\"Product Family\".alias(\"product\"), $\"Product Description\".alias(\"product_description\"))\n\nval userIndexer = new StringIndexer().setInputCol(\"user\").setOutputCol(\"userID\")\nval indexed = userIndexer.fit(transaction).transform(transaction)\nval productIndexer = new StringIndexer().setInputCol(\"product\").setOutputCol(\"productID\")\nval whole = productIndexer.fit(indexed).transform(indexed)\n//whole.printSchema()\n//whole.show(10)\nval transform = whole.select($\"userID\".cast(\"int\"),$\"productID\".cast(\"int\"),$\"rating\")\nval table = transform.groupBy(\"userID\",\"productID\").agg(sum(\"rating\").alias(\"rating\")).toDF()","user":"anonymous","dateUpdated":"2018-12-17T02:22:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"transaction: org.apache.spark.sql.DataFrame = [user: string, product: string ... 1 more field]\nproduct_description: org.apache.spark.sql.DataFrame = [product: string, product_description: string]\nuserIndexer: org.apache.spark.ml.feature.StringIndexer = strIdx_f55d6cb168ae\nindexed: org.apache.spark.sql.DataFrame = [user: string, product: string ... 2 more fields]\nproductIndexer: org.apache.spark.ml.feature.StringIndexer = strIdx_8f95a2dde6fd\nwhole: org.apache.spark.sql.DataFrame = [user: string, product: string ... 3 more fields]\ntransform: org.apache.spark.sql.DataFrame = [userID: int, productID: int ... 1 more field]\ntable: org.apache.spark.sql.DataFrame = [userID: int, productID: int ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=0","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=1","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=2","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792805_-2079590396","id":"20181212-020008_856232412","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:22:15+0000","dateFinished":"2018-12-17T02:23:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189286"},{"text":"val table_log = table.withColumn(\"log\",expr(\"log10(rating)\"))\n//example.show(3)","user":"anonymous","dateUpdated":"2018-12-17T08:40:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"table_log: org.apache.spark.sql.DataFrame = [userID: int, productID: int ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1545034951479_-1666152218","id":"20181217-082231_1962586452","dateCreated":"2018-12-17T08:22:31+0000","dateStarted":"2018-12-17T08:40:39+0000","dateFinished":"2018-12-17T08:40:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189287"},{"text":"// table.count() //140062\nval numUsers = table.select(table.col(\"userID\")).distinct().count() \nval numProducts = table.select(table.col(\"productID\")).distinct().count()\n//numUsers //33984\n// numProducts //24209\n\n/*\n+------+---------+\n|unique|unique   |\n|user  |product  |\n+------+---------+\n| 33984|    24209|\n+------+---------+\n\n\n\n*/\n","user":"anonymous","dateUpdated":"2018-12-17T02:23:30+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numUsers: Long = 33984\nnumProducts: Long = 24209\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=4","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=5"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792806_-138587946","id":"20181212-023543_1975592944","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:23:30+0000","dateFinished":"2018-12-17T02:24:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189288"},{"text":"// filter某用戶在某產品購買數量最多的紀錄\n//whole.sort($\"rating\".desc).show \n/*\n+----------+----------+-------+-------+---------+\n|      user|   product| rating| userID|productID|\n+----------+----------+-------+-------+---------+\n|Q-00030883|10QYPAT1EU|30000.0|14060.0|     26.0|\n|Q-00063632|61B7JAT6EU|30000.0|17747.0|     60.0|\n|Q-00063632|61CAKAT1EU|30000.0|17747.0|    207.0|\n|Q-00030883|10M4S00R00|30000.0|14060.0|  10806.0|\n|Q-00068476|20LTS6P200|29200.0|10726.0|  23877.0|\n+----------+----------+-------+-------+---------+\n*/\n\n\n// filter 消費數量最高的前10大用戶\n//whole.groupBy(\"userID\").agg(sum(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc).show\n/*\n+------+------------+\n|userID|Total_Amount|\n+------+------------+\n|   3.0|    537000.0|\n|  54.0|    344450.0|\n| 282.0|    250800.0|\n| 334.0|    230800.0|\n|  71.0|    173000.0|\n| 719.0|    170800.0|\n|1054.0|    160000.0|\n| 685.0|    158000.0|\n| 707.0|    154000.0|\n| 760.0|    148000.0|\n+------+------------+\n\n*/\n\n// top 10 sale\nval top_sale =  whole.groupBy(\"productID\").agg(sum(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc)\n/*\n+---------+------------+\n|productID|Total_Amount|\n+---------+------------+\n|      0.0|    577598.0|\n|      1.0|    492920.0|\n|      5.0|    288709.0|\n|      4.0|    272528.0|\n|      3.0|    262920.0|\n|      8.0|    236287.0|\n|     18.0|    228088.0|\n|     11.0|    221678.0|\n|      2.0|    213747.0|\n|    153.0|    201092.0|\n+---------+------------+\n\n*/","user":"anonymous","dateUpdated":"2018-12-17T03:50:33+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"top_sale: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [productID: double, Total_Amount: double]\n"}]},"apps":[],"jobName":"paragraph_1545011792806_-448882169","id":"20181212-020233_1752433362","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T03:50:33+0000","dateFinished":"2018-12-17T03:50:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189289"},{"text":"","user":"anonymous","dateUpdated":"2018-12-17T08:14:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:66: error: value / is not a member of org.apache.spark.sql.Row\n         r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), (r/1e9).getAs[Double](\"rating\")\n                                                              ^\n"}]},"apps":[],"jobName":"paragraph_1545032842999_1460085403","id":"20181217-074722_965274039","dateCreated":"2018-12-17T07:47:22+0000","dateStarted":"2018-12-17T08:14:43+0000","dateFinished":"2018-12-17T08:14:44+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:189290"},{"text":"// NOTE: add minimum and maximum values to thresholds\r\nval thresholds: Array[Double] = Array(Double.MinValue, 0.0) ++ (((0.0 until 600000 by 100000).toArray ++ Array(Double.MaxValue)).map(_.toDouble))\r\n\r\n// Convert DataFrame to RDD and calculate histogram values\r\nval _tmpHist = top_sale.\r\n    select($\"Total_Amount\" cast \"double\").\r\n    rdd.map(r => r.getDouble(0)).\r\n    histogram(thresholds)\r\n\r\n// Result DataFrame contains `from`, `to` range and the `value`.\r\nval histogram = sc.parallelize((thresholds, thresholds.tail, _tmpHist).zipped.toList).toDF(\"from\", \"to\", \"value\")","user":"anonymous","dateUpdated":"2018-12-17T02:24:49+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"thresholds: Array[Double] = Array(-1.7976931348623157E308, 0.0, 0.0, 100000.0, 200000.0, 300000.0, 400000.0, 500000.0, 1.7976931348623157E308)\n_tmpHist: Array[Long] = Array(0, 0, 24168, 31, 8, 0, 1, 1)\nhistogram: org.apache.spark.sql.DataFrame = [from: double, to: double ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=6","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=7"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792807_1243398953","id":"20181214-093158_1815709665","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:24:49+0000","dateFinished":"2018-12-17T02:25:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189291"},{"text":"val unique_product = table_log.dropDuplicates(\"productID\") //留下唯一productID  (A)\nval unique_user = table_log.dropDuplicates(\"userID\") //留下唯一userID\nval join = unique_user.union(unique_product) //兩個資料表append\nval unique_product_user = join.dropDuplicates() //重複record drop掉 -> 作為train set\nval numUsers = unique_product_user.select(unique_product_user.col(\"userID\")).distinct().count() //確認數據有相同數量unique user\nval numProducts = unique_product_user.select(unique_product_user.col(\"productID\")).distinct().count() //確認數據有相同數量unique product\n//numUsers\n//numProducts","user":"anonymous","dateUpdated":"2018-12-17T08:56:40+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"unique_product: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\nunique_user: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\njoin: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\nunique_product_user: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\nnumUsers: Long = 33984\nnumProducts: Long = 24209\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=699","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=700"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792807_-873677939","id":"20181213-021529_782513074","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T08:41:22+0000","dateFinished":"2018-12-17T08:43:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189292"},{"text":"unique_product_user.count()","user":"anonymous","dateUpdated":"2018-12-17T08:54:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res283: Long = 51324\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=739"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545036872623_1776430459","id":"20181217-085432_906669180","dateCreated":"2018-12-17T08:54:32+0000","dateStarted":"2018-12-17T08:54:57+0000","dateFinished":"2018-12-17T08:58:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189293"},{"text":"val test_product = test.groupBy(\"productID\").agg(count(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc)\ntest_product.show","user":"anonymous","dateUpdated":"2018-12-17T02:27:23+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:50: error: not found: value test\n       val test_product = test.groupBy(\"productID\").agg(count(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc)\n                          ^\n"}]},"apps":[],"jobName":"paragraph_1545011792807_1421748990","id":"20181214-100412_1126694641","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T02:27:23+0000","dateFinished":"2018-12-17T02:27:23+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:189294"},{"text":"val test_notyet = table_log.except(unique_product_user)\n//val train = unique_product_user\n//val numTrain = train.count()\n// val numTest = test.count()\n//test.select(unique_product_user.col(\"userID\")).distinct().count()\n//test.select(unique_product_user.col(\"productID\")).distinct().count()\n// train: 88943\n// test: 51057","user":"anonymous","dateUpdated":"2018-12-17T09:53:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"test_notyet: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1545011792808_-2115758553","id":"20181213-030530_760267561","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T09:53:25+0000","dateFinished":"2018-12-17T09:53:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189295"},{"text":"val Array(training, test) = test_notyet.randomSplit(Array[Double](0.9, 0.1))\nval training_final = train.union(training)\nval testing = test","user":"anonymous","dateUpdated":"2018-12-17T09:54:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"training: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\ntraining_final: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\ntesting: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1545040273790_1471313243","id":"20181217-095113_1974828670","dateCreated":"2018-12-17T09:51:13+0000","dateStarted":"2018-12-17T09:54:22+0000","dateFinished":"2018-12-17T09:54:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189296"},{"text":"// val training = train.union(unique_product_tr.toDF())\nval tableRDD = table_log.rdd.map(r => Rating(\n  r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), r.getAs[Double](\"log\")\n))\n/*\nval trainRDD = training_final.rdd.map(r => Rating(\n  r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), r.getAs[Double](\"log\")\n))\n\nval testRDD = testing.rdd.map(r => Rating(\n  r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), r.getAs[Double](\"rating\")\n))\n","user":"anonymous","dateUpdated":"2018-12-17T10:05:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"INCOMPLETE","msg":[{"type":"TEXT","data":"tableRDD: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating] = MapPartitionsRDD[6161] at map at <console>:68\n"}]},"apps":[],"jobName":"paragraph_1545011792808_731475414","id":"20181212-043339_2062055690","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T10:05:24+0000","dateFinished":"2018-12-17T10:14:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189297"},{"text":"/*\r\ndef computeRmse(model: MatrixFactorizationModel, data: RDD[Rating], n: Long): Double = {\r\n    val predictions: RDD[Rating] = model.predict(data.map(x => (x.user, x.product)))\r\n    val predictionsAndRatings = predictions.map(x => ((x.user, x.product), x.rating))\r\n      .join(data.map(x => ((x.user, x.product), x.rating)))\r\n      .values\r\n    math.sqrt(predictionsAndRatings.map(x => (x._1 - x._2) * (x._1 - x._2)).reduce(_ + _) / n)\r\n  }","user":"anonymous","dateUpdated":"2018-12-17T01:56:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"INCOMPLETE","msg":[]},"apps":[],"jobName":"paragraph_1545011792809_2094815505","id":"20181212-052939_2138673281","dateCreated":"2018-12-17T01:56:32+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:189298"},{"text":"// Corss Validation Model\n    val ranks = List(30,50)\n    val lambdas = List(0.01,1)\n    val alphas = List(40,100)\n    val numIters = List(15)\n    var bestModel: Option[MatrixFactorizationModel] = None\n    var bestRanking = 99.0\n    var bestRank = 0\n    var bestLambda = -1.0\n    var bestNumIter = -1\n    var bestAlpha = 0\n\n    for (rank <- ranks; lambda <- lambdas; numIter <- numIters; alpha <- alphas ) {\n      val model = ALS.trainImplicit(trainRDD, rank, numIter, lambda, alpha)\n      val rank_in = expectedPercentileRanking(model, testRDD)\n      println(\"Percentil Ranking = \" + rank_in + \" for the model trained with rank = \"\n        + rank + \n        \", lambda = \" + lambda + \n        \", alpha = \" + alpha + \n        \", and numIter = \" + numIter + \".\")\n      if (rank_in < bestRanking) {\n        bestModel = Some(model)\n        bestRanking = rank_in\n        bestRank = rank\n        bestLambda = lambda\n        bestNumIter = numIter\n        bestAlpha = alpha\n      }\n    }\n\n    val test_PercentileRanking = rank_in\n\n    println(\"The best model was trained with ranking = \" + bestRanking + \" and rank = \" + bestRank + \" and lambda = \" + bestLambda\n      + \", and numIter = \" + bestNumIter + \", and its RMSE on the test set is \" + test_PercentileRanking + \".\")","user":"anonymous","dateUpdated":"2018-12-17T05:32:03+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"ranks: List[Int] = List(30, 50)\nlambdas: List[Double] = List(0.01, 1.0)\nalphas: List[Int] = List(40, 100)\nnumIters: List[Int] = List(15)\nbestModel: Option[org.apache.spark.mllib.recommendation.MatrixFactorizationModel] = None\nbestRanking: Double = 99.0\nbestRank: Int = 0\nbestLambda: Double = -1.0\nbestNumIter: Int = -1\nbestAlpha: Int = 0\nPercentil Ranking = 0.9474067554665051 for the model trained with rank = 30, lambda = 0.01, alpha = 40, and numIter = 15.\nPercentil Ranking = 0.9474067554665049 for the model trained with rank = 30, lambda = 0.01, alpha = 100, and numIter = 15.\nPercentil Ranking = 0.9474067554665043 for the model trained with rank = 30, lambda = 1.0, alpha = 40, and numIter = 15.\nPercentil Ranking = 0.9474067554665049 for the model trained with rank = 30, lambda = 1.0, alpha = 100, and numIter = 15.\nPercentil Ranking = 0.9474067554665049 for the model trained with rank = 50, lambda = 0.01, alpha = 40, and numIter = 15.\nPercentil Ranking = 0.9474067554665049 for the model trained with rank = 50, lambda = 0.01, alpha = 100, and numIter = 15.\norg.apache.spark.SparkException: Job 541 cancelled part of cancelled job group zeppelin-2E14SNKA5-20181213-032739_1279375246\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1803)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1738)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:851)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:851)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:851)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:851)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1993)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1973)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1962)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:682)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2131)\n  at org.apache.spark.rdd.RDD$$anonfun$aggregate$1.apply(RDD.scala:1124)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)\n  at org.apache.spark.rdd.RDD.aggregate(RDD.scala:1117)\n  at org.apache.spark.ml.recommendation.ALS$.computeYtY(ALS.scala:1711)\n  at org.apache.spark.ml.recommendation.ALS$.org$apache$spark$ml$recommendation$ALS$$computeFactors(ALS.scala:1652)\n  at org.apache.spark.ml.recommendation.ALS$$anonfun$train$4.apply(ALS.scala:982)\n  at org.apache.spark.ml.recommendation.ALS$$anonfun$train$4.apply(ALS.scala:969)\n  at scala.collection.immutable.Range.foreach(Range.scala:160)\n  at org.apache.spark.ml.recommendation.ALS$.train(ALS.scala:969)\n  at org.apache.spark.mllib.recommendation.ALS.run(ALS.scala:255)\n  at org.apache.spark.mllib.recommendation.ALS$.trainImplicit(ALS.scala:428)\n  at org.apache.spark.mllib.recommendation.ALS$.trainImplicit(ALS.scala:447)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1$$anonfun$apply$mcVI$sp$2.apply$mcVI$sp(<console>:135)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1$$anonfun$apply$mcVI$sp$2.apply(<console>:134)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1$$anonfun$apply$mcVI$sp$2.apply(<console>:134)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1.apply$mcVI$sp(<console>:134)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1.apply(<console>:134)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1.apply(<console>:134)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1.apply$mcVD$sp(<console>:134)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1.apply(<console>:134)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1.apply(<console>:134)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at $anonfun$1.apply$mcVI$sp(<console>:134)\n  at $anonfun$1.apply(<console>:134)\n  at $anonfun$1.apply(<console>:134)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  ... 56 elided\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=286","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=287","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=288","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=289","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=290","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=291","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=292","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=293","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=294","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=295","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=296","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=297","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=298","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=299","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=300","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=301","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=302","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=303","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=304","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=305","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=306","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=307","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=308","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=309","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=310","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=311","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=312","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=313","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=314","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=315","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=316","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=317","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=318","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=319","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=320","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=321","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=322","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=323","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=324","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=325","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=326","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=327","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=328","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=329","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=330","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=331","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=332","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=333","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=334","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=335","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=336","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=337","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=338","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=339","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=340","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=341","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=342","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=343","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=344","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=345","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=346","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=347","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=348","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=349","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=350","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=351","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=352","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=353","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=354","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=355","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=356","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=357","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=358","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=359","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=360","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=361","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=362","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=363","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=364","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=365","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=366","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=367","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=368","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=369","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=370","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=371","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=372","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=373","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=374","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=375","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=376","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=377","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=378","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=379","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=380","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=381","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=382","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=383","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=384","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=385","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=386","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=387","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=388","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=389","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=390","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=391","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=392","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=393","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=394","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=395","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=396","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=397","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=398","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=399","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=400","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=401","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=402","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=403","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=404","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=405","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=406","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=407","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=408","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=409","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=410","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=411","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=412","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=413","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=414","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=415","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=416","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=417","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=418","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=419","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=420","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=421","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=422","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=423","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=424","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=425","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=426","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=427","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=428","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=429","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=430","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=431","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=432","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=433","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=434","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=435","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=436","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=437","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=438","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=439","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=440","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=441","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=442","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=443","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=444","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=445","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=446","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=447","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=448","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=449","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=450","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=451","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=452","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=453","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=454","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=455","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=456","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=457","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=458","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=459","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=460","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=461","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=462","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=463","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=464","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=465","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=466","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=467","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=468","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=469","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=470","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=471","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=472","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=473","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=474","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=475","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=476","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=477","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=478","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=479","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=480","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=481","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=482","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=483","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=484","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=485","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=486","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=487","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=488","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=489","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=490","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=491","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=492","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=493","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=494","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=495","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=496","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=497","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=498","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=499","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=500","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=501","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=502","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=503","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=504","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=505","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=506","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=507","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=508","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=509","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=510","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=511","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=512","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=513","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=514","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=515","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=516","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=517","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=518","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=519","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=520","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=521","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=522","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=523","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=524","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=525","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=526","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=527","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=528","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=529","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=530","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=531","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=532","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=533","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=534","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=535","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=536","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=537","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=538","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=539","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=540","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=541"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792809_-230081882","id":"20181213-032739_1279375246","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T05:32:03+0000","dateFinished":"2018-12-17T06:17:23+0000","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:189299"},{"text":"// run the better model\n\nval rank = 50\nval numIterations = 15\nval alpha = 40\nval lambda = 0.01\nval block = -1\nval seed = 1222L\nval implicitPrefs = true\nval model = new ALS().\nsetIterations(numIterations).\nsetBlocks(block).\nsetAlpha(alpha).\nsetLambda(lambda).\nsetRank(rank).\nsetSeed(seed).\nsetImplicitPrefs(implicitPrefs).\nrun(trainRDD)\n\n","user":"anonymous","dateUpdated":"2018-12-17T09:57:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rank: Int = 50\nnumIterations: Int = 15\nalpha: Int = 40\nlambda: Double = 0.01\nblock: Int = -1\nseed: Long = 1222\nimplicitPrefs: Boolean = true\nmodel: org.apache.spark.mllib.recommendation.MatrixFactorizationModel = org.apache.spark.mllib.recommendation.MatrixFactorizationModel@3f1326a3\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=742","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=743","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=744","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=745","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=746","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=747","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=748","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=749","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=750","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=751","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=752","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=753","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=754","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=755","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=756","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=757","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=758","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=759","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=760","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=761","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=762","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=763","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=764","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=765","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=766","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=767","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=768","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=769","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=770","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=771","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=772","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=773","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=774","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=775","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=776","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=777","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=778","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=779"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792810_-1832411439","id":"20181212-061309_180340924","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T09:57:59+0000","dateFinished":"2018-12-17T10:14:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189300"},{"text":"// percentile ranking function\r\ndef expectedPercentileRanking(model: MatrixFactorizationModel, ratings: RDD[Rating]) = {\r\n    val itemFactors = model.productFeatures.collect() //itemFactors: Array[(Int, Array[Double])]\r\n    val itemMatrix = new DoubleMatrix(itemFactors.map(_._2)) //[Double]\r\n    val imBroadCast = sc.broadcast(itemMatrix)\r\n    val itemListPerUser = ratings.groupBy(_.user).map {\r\n      case (user, ratingList) => (user, ratingList.map(rt => (rt.product, rt.rating)).toArray)\r\n    }\r\n    // itemListPerUser: [(Int, Array[(Int, Double)])]\r\n    val rankRDD = model.userFeatures.join(itemListPerUser).map {\r\n        //(Int,     (Array[Double], Array[(Int, Double)]))\r\n      case (userId, (userFeatures, itemRatingList)) =>\r\n        val userVector = new DoubleMatrix(userFeatures)\r\n        val scores = imBroadCast.value.mmul(userVector) //用戶對各產品喜好分數乘積\r\n        \r\n        val sortedWithId = scores.data.zipWithIndex.sortBy(-_._1) //A. User 產品偏好分數由大到小排列\r\n        val itemsOrderedByPref = sortedWithId.map(_._2).toSeq // B. 抓取User喜好順序的對應產品ID ex. User0 : [P4,P3,P1]\r\n        \r\n        val rankWeightedByRating = itemRatingList.map {\r\n          case (itemId, rating) =>\r\n            rating *itemsOrderedByPref.indexOf(itemId).toDouble / (itemsOrderedByPref.size - 1)\r\n        \r\n        }.sum\r\n        rankWeightedByRating\r\n    }\r\n    \r\n    rankRDD.take(3).foreach(println)\r\n    val weightedRankOverAll = rankRDD.sum()\r\n    val sumWeight = ratings.map(_.rating).sum()\r\n    weightedRankOverAll / sumWeight\r\n    \r\n  }","user":"anonymous","dateUpdated":"2018-12-17T07:42:43+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"expectedPercentileRanking: (model: org.apache.spark.mllib.recommendation.MatrixFactorizationModel, ratings: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating])Double\n"}]},"apps":[],"jobName":"paragraph_1545011792811_1233342621","id":"20181213-060048_1845127949","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T07:42:43+0000","dateFinished":"2018-12-17T07:42:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189301"},{"text":"// \n// 1. top sale ranking.\n// 2. percentile ranking of testset item.\n\n//val top_sale =  whole.groupBy(\"productID\").agg(sum(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc).drop(\"Total_Amount\")\n\n// val topSale_List = top_sale.select(\"productID\").collect().map(_(0)).toList\n\ndef topSalePercentileRanking(TopSale: List[Any], ratings: RDD[Rating]) = {\n    \n    //val List =  whole.groupBy(\"productID\").agg(sum(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc).drop(\"Total_Amount\")\n    //val topSale_List = top_sale.select(\"productID\").collect().map(_(0)).toList\n    \n    val itemListPerUser = ratings.groupBy(_.user).map {\n      case (user, ratingList) => (user, ratingList.map(rt => (rt.product, rt.rating)).toArray)\n    }\n    val rankRDD_top = itemListPerUser.map {\n      case (userId, itemRatingList) =>\n\n        \n        val rankWeightedByRating = itemRatingList.map {\n          case (itemId, rating) =>\n             rating * TopSale.indexOf(itemId).toDouble / (TopSale.size - 1)\n        \n        }.sum\n        rankWeightedByRating\n    }\n    rankRDD_top.take(3).foreach(println)\n    val weightedRankOverAll = rankRDD_top.sum()\n    val sumWeight = ratings.map(_.rating).sum()\n    weightedRankOverAll / sumWeight\n  }\n\n\n\n","user":"anonymous","dateUpdated":"2018-12-17T07:43:04+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"topSalePercentileRanking: (TopSale: List[Any], ratings: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating])Double\n"}]},"apps":[],"jobName":"paragraph_1545011792811_1676740643","id":"20181214-073100_1799197759","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T07:43:04+0000","dateFinished":"2018-12-17T07:43:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189302"},{"text":" //topSalePercentileRanking(topSale_List,trainRDD)\n  topSalePercentileRanking(topSale_List,tableRDD)\n  ","user":"anonymous","dateUpdated":"2018-12-17T07:40:43+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.008096497025776602\n5.783212161269003E-4\n0.15111739920687375\nres243: Double = 0.0468049628897387\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=651","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=652","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=653"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792812_-870620058","id":"20181214-085829_1387069036","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T07:40:43+0000","dateFinished":"2018-12-17T07:41:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189303"},{"text":"/*\nval top_recommendRDD = top_recommend.rdd.map(r => Rating(\n  r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), r.getAs[Double](\"rating\")\n))\n\nval rank_out = expectedPercentileRanking(model, top_recommendRDD)\n*/\n","user":"anonymous","dateUpdated":"2018-12-17T01:56:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"top_recommendRDD: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating] = MapPartitionsRDD[519] at map at <console>:77\nrank_out: org.apache.spark.rdd.RDD[Unit] = MapPartitionsRDD[526] at map at <console>:110\n"}]},"apps":[],"jobName":"paragraph_1545011792812_1682126148","id":"20181213-092103_1791341371","dateCreated":"2018-12-17T01:56:32+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:189304"},{"text":"\r\n//val rank_in = expectedPercentileRanking(model, testRDD)\r\nval rank_out = expectedPercentileRanking(model, tableRDD)\r\n","user":"anonymous","dateUpdated":"2018-12-17T10:05:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.9271612062611646\n5.340525256323278\n1.8604618351425604\nrank_out: Double = 0.49723210033560783\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=780","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=781","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=782","http://ip-172-31-38-198.ec2.internal:4040/jobs/job?id=783"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545011792812_1803945063","id":"20181212-070031_1706859906","dateCreated":"2018-12-17T01:56:32+0000","dateStarted":"2018-12-17T10:14:05+0000","dateFinished":"2018-12-17T10:21:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189305"},{"user":"anonymous","dateUpdated":"2018-12-17T01:56:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545011792813_1097514111","id":"20181214-091517_840293925","dateCreated":"2018-12-17T01:56:32+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:189306"}],"name":"MAP","id":"2E14SNKA5","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}