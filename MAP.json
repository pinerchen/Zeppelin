{"paragraphs":[{"text":"%dep\r\nz.load(\"org.scalanlp:jblas:1.2.1\")\r\n","user":"anonymous","dateUpdated":"2018-12-12T07:57:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@42cb9407\n"}]},"apps":[],"jobName":"paragraph_1544579923048_1534673994","id":"20181212-015843_1688763497","dateCreated":"2018-12-12T01:58:43+0000","dateStarted":"2018-12-12T01:59:20+0000","dateFinished":"2018-12-12T01:59:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:64377"},{"text":"// 导入jblas库中的矩阵类\nimport org.jblas.DoubleMatrix\n// 定义相似度函数\ndef cosineSimilarity(vec1: DoubleMatrix, vec2: DoubleMatrix): Double = {\n    vec1.dot(vec2) / (vec1.norm2() * vec2.norm2())\n}\n","user":"anonymous","dateUpdated":"2018-12-12T01:59:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.jblas.DoubleMatrix\ncosineSimilarity: (vec1: org.jblas.DoubleMatrix, vec2: org.jblas.DoubleMatrix)Double\n"}]},"apps":[],"jobName":"paragraph_1544579960144_2014287717","id":"20181212-015920_1065716449","dateCreated":"2018-12-12T01:59:20+0000","dateStarted":"2018-12-12T01:59:34+0000","dateFinished":"2018-12-12T01:59:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64378"},{"text":"import java.io.File\nimport scala.io.Source\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\n\nimport org.apache.spark.ml.fpm.FPGrowth\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.mllib.evaluation.RankingMetrics\n\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.functions.explode\nimport org.apache.spark.sql.{DataFrame, Dataset,SparkSession}\n\nimport org.apache.spark.mllib.recommendation.Rating\nimport org.apache.spark.mllib.recommendation.ALS\nimport org.apache.spark.mllib.recommendation.MatrixFactorizationModel\nimport org.apache.spark.sql.Row\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.rdd.RDD","user":"anonymous","dateUpdated":"2018-12-12T02:00:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import java.io.File\nimport scala.io.Source\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport org.apache.spark.ml.fpm.FPGrowth\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.mllib.evaluation.RankingMetrics\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.functions.explode\nimport org.apache.spark.sql.{DataFrame, Dataset, SparkSession}\nimport org.apache.spark.mllib.recommendation.Rating\nimport org.apache.spark.mllib.recommendation.ALS\nimport org.apache.spark.mllib.recommendation.MatrixFactorizationModel\nimport org.apache.spark.sql.Row\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.rdd.RDD\n"}]},"apps":[],"jobName":"paragraph_1544579974717_-126575449","id":"20181212-015934_389368932","dateCreated":"2018-12-12T01:59:34+0000","dateStarted":"2018-12-12T02:00:08+0000","dateFinished":"2018-12-12T02:00:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64379"},{"text":"//raw dataset\nval transaction = spark.read.option(\"header\",\"true\").csv(\"s3://input-smart-find/Quotations-110818-S.csv\").select($\"Quotation: Quotation ID\".alias(\"user\"), $\"Product: Product Family\".alias(\"product\"),$\"Display Quantity\".alias(\"number\")).groupBy(\"user\",\"product\").agg(sum(\"number\").alias(\"rating\")).toDF()\n val product_description = spark.read.option(\"header\",\"true\").csv(\"s3://input-smart-find/products - 110818-s.csv\").select($\"Product Family\".alias(\"product\"), $\"Product Description\".alias(\"product_description\"))\n\nval userIndexer = new StringIndexer().setInputCol(\"user\").setOutputCol(\"userID\")\nval indexed = userIndexer.fit(transaction).transform(transaction)\nval productIndexer = new StringIndexer().setInputCol(\"product\").setOutputCol(\"productID\")\nval whole = productIndexer.fit(indexed).transform(indexed)\n//whole.printSchema()\n//whole.show(10)\nval transform = whole.select($\"userID\".cast(\"int\"),$\"productID\".cast(\"int\"),$\"rating\")\nval table = transform.groupBy(\"userID\",\"productID\").agg(sum(\"rating\").alias(\"rating\")).toDF()","user":"anonymous","dateUpdated":"2018-12-12T02:02:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"transaction: org.apache.spark.sql.DataFrame = [user: string, product: string ... 1 more field]\nproduct_description: org.apache.spark.sql.DataFrame = [product: string, product_description: string]\nuserIndexer: org.apache.spark.ml.feature.StringIndexer = strIdx_595d3d8e8a21\nindexed: org.apache.spark.sql.DataFrame = [user: string, product: string ... 2 more fields]\nproductIndexer: org.apache.spark.ml.feature.StringIndexer = strIdx_393d054a1985\nwhole: org.apache.spark.sql.DataFrame = [user: string, product: string ... 3 more fields]\ntransform: org.apache.spark.sql.DataFrame = [userID: int, productID: int ... 1 more field]\ntable: org.apache.spark.sql.DataFrame = [userID: int, productID: int ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=0","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=1","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=2","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544580008416_997409313","id":"20181212-020008_856232412","dateCreated":"2018-12-12T02:00:08+0000","dateStarted":"2018-12-12T02:02:33+0000","dateFinished":"2018-12-12T02:03:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64380"},{"text":"val numUsers = table.select(table.col(\"userID\")).distinct().count()\nval numProducts = table.select(table.col(\"productID\")).distinct().count()\nnumUsers //33984\nnumProducts //24209\n\n/*\n+------+---------+\n|unique|unique   |\n|user  |product  |\n+------+---------+\n| 33984|    24209|\n+------+---------+\n\ntraining data = unique + 70% (abstract_unique) = 24209 + 81142\ntesting data = 34697\n\n\n\n\n*/\n","user":"anonymous","dateUpdated":"2018-12-12T05:15:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numUsers: Long = 33984\nnumProducts: Long = 24209\nres27: Long = 33984\nres28: Long = 24209\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=7","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=8"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544582143568_310600589","id":"20181212-023543_1975592944","dateCreated":"2018-12-12T02:35:43+0000","dateStarted":"2018-12-12T02:38:51+0000","dateFinished":"2018-12-12T02:40:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64381"},{"text":"// get unique product\ntable.count() //140062\nval unique_product_tr = table.dropDuplicates(\"productID\") //24209\nval abstract_unique = table.except(unique_product_tr) //115853\nabstract_unique.count()\n//unique_product_tr.show()\n//unique_product_tr.count()\n","user":"anonymous","dateUpdated":"2018-12-12T04:11:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"unique_product_tr: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 1 more field]\n+------+---------+------+\n|userID|productID|rating|\n+------+---------+------+\n|  1891|      148| 500.0|\n|    13|     2866| 500.0|\n|  9515|      496| 100.0|\n|   482|      463|   1.0|\n|  7829|     1342|  40.0|\n|   404|     1959|   1.0|\n|  5447|     1580|   2.0|\n|  5643|     1088| 500.0|\n|  9426|     5300| 100.0|\n|  8661|      833| 500.0|\n|    14|     1829| 500.0|\n|   121|     1238|   2.0|\n|   384|     2366|  15.0|\n|  5168|     3997|   8.0|\n| 25673|    18911|  10.0|\n|   250|     3794| 100.0|\n|  7681|    23271| 800.0|\n|   762|    11748|   1.0|\n| 30480|     9852|  25.0|\n|  3710|     9465| 100.0|\n+------+---------+------+\nonly showing top 20 rows\n\nres36: Long = 24209\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=9","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544580314895_-638095584","id":"20181212-020514_1423207826","dateCreated":"2018-12-12T02:05:14+0000","dateStarted":"2018-12-12T02:46:18+0000","dateFinished":"2018-12-12T02:48:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64382"},{"text":"val splits = abstract_unique.randomSplit(Array(0.7,0.3),seed = 12345L)\nval (train,test) = (splits(0),splits(1))\nval numTrain = train.count() //80766\nval numTest = test.count() //35036","user":"anonymous","dateUpdated":"2018-12-12T05:25:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"splits: Array[org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]] = Array([userID: int, productID: int ... 1 more field], [userID: int, productID: int ... 1 more field])\ntrain: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 1 more field]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [userID: int, productID: int ... 1 more field]\nnumTrain: Long = 80766\nnumTest: Long = 35036\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=26","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=27","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=28","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=29"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544586293582_197885469","id":"20181212-034453_861572889","dateCreated":"2018-12-12T03:44:53+0000","dateStarted":"2018-12-12T05:22:15+0000","dateFinished":"2018-12-12T05:24:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64383"},{"text":"// val training = train.union(unique_product_tr.toDF())\n\nval trainRDD = training.rdd.map(r => Rating(\n  r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), r.getAs[Double](\"rating\")\n))\n\nval testRDD = test.rdd.map(r => Rating(\n  r.getAs[Int](\"userID\"), r.getAs[Int](\"productID\"), r.getAs[Double](\"rating\")\n))\n","user":"anonymous","dateUpdated":"2018-12-12T05:33:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainRDD: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating] = MapPartitionsRDD[390] at map at <console>:72\ntestRDD: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating] = MapPartitionsRDD[406] at map at <console>:53\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=34","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=35"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544589219353_-417218526","id":"20181212-043339_2062055690","dateCreated":"2018-12-12T04:33:39+0000","dateStarted":"2018-12-12T05:33:02+0000","dateFinished":"2018-12-12T05:35:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64384"},{"text":"val numTrain = training.count()\nval numTest = test.count()","user":"anonymous","dateUpdated":"2018-12-12T05:28:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numTrain: Long = 105394\nnumTest: Long = 35063\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=30","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=31","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=32","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=33"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544590870242_-1719624821","id":"20181212-050110_1447355126","dateCreated":"2018-12-12T05:01:10+0000","dateStarted":"2018-12-12T05:28:44+0000","dateFinished":"2018-12-12T05:31:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64385"},{"text":"// filter某用戶在某產品購買數量最多的紀錄\n//whole.sort($\"rating\".desc).show \n/*\n+----------+----------+-------+-------+---------+\n|      user|   product| rating| userID|productID|\n+----------+----------+-------+-------+---------+\n|Q-00030883|10QYPAT1EU|30000.0|14060.0|     26.0|\n|Q-00063632|61B7JAT6EU|30000.0|17747.0|     60.0|\n|Q-00063632|61CAKAT1EU|30000.0|17747.0|    207.0|\n|Q-00030883|10M4S00R00|30000.0|14060.0|  10806.0|\n|Q-00068476|20LTS6P200|29200.0|10726.0|  23877.0|\n+----------+----------+-------+-------+---------+\n*/\n\n\n// filter 消費數量最高的前10大用戶\n//whole.groupBy(\"userID\").agg(sum(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc).show\n/*\n+------+------------+\n|userID|Total_Amount|\n+------+------------+\n|   3.0|    537000.0|\n|  54.0|    344450.0|\n| 282.0|    250800.0|\n| 334.0|    230800.0|\n|  71.0|    173000.0|\n| 719.0|    170800.0|\n|1054.0|    160000.0|\n| 685.0|    158000.0|\n| 707.0|    154000.0|\n| 760.0|    148000.0|\n+------+------------+\n\n*/\n\n// top 10 sale\n//whole.groupBy(\"productID\").agg(sum(\"rating\").alias(\"Total_Amount\")).sort($\"Total_Amount\".desc).show\n/*\n+---------+------------+\n|productID|Total_Amount|\n+---------+------------+\n|      0.0|    577598.0|\n|      1.0|    492920.0|\n|      5.0|    288709.0|\n|      4.0|    272528.0|\n|      3.0|    262920.0|\n|      8.0|    236287.0|\n|     18.0|    228088.0|\n|     11.0|    221678.0|\n|      2.0|    213747.0|\n|    153.0|    201092.0|\n+---------+------------+\n\n*/","user":"anonymous","dateUpdated":"2018-12-12T02:03:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544580153880_-339199034","id":"20181212-020233_1752433362","dateCreated":"2018-12-12T02:02:33+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:64386"},{"text":"def computeRmse(model: MatrixFactorizationModel, data: RDD[Rating], n: Long): Double = {\r\n    val predictions: RDD[Rating] = model.predict(data.map(x => (x.user, x.product)))\r\n    val predictionsAndRatings = predictions.map(x => ((x.user, x.product), x.rating))\r\n      .join(data.map(x => ((x.user, x.product), x.rating)))\r\n      .values\r\n    math.sqrt(predictionsAndRatings.map(x => (x._1 - x._2) * (x._1 - x._2)).reduce(_ + _) / n)\r\n  }","user":"anonymous","dateUpdated":"2018-12-12T05:29:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"computeRmse: (model: org.apache.spark.mllib.recommendation.MatrixFactorizationModel, data: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating], n: Long)Double\n"}]},"apps":[],"jobName":"paragraph_1544592579808_1907509129","id":"20181212-052939_2138673281","dateCreated":"2018-12-12T05:29:39+0000","dateStarted":"2018-12-12T05:29:43+0000","dateFinished":"2018-12-12T05:31:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64387"},{"text":"val rank = 100\nval numIterations = 20\nval alpha = 40\nval lambda = 0.0001\n// val block = -1\nval seed = 1222L\nval implicitPrefs = true\nval model = new ALS().\nsetIterations(numIterations).\n// setBlocks(block).\nsetAlpha(alpha).\nsetLambda(lambda).\nsetRank(rank).\nsetSeed(seed).\nsetImplicitPrefs(implicitPrefs).\nrun(trainRDD)","user":"anonymous","dateUpdated":"2018-12-12T09:15:13+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rank: Int = 100\nnumIterations: Int = 20\nalpha: Int = 40\nlambda: Double = 1.0E-4\nseed: Long = 1222\nimplicitPrefs: Boolean = true\nmodel: org.apache.spark.mllib.recommendation.MatrixFactorizationModel = org.apache.spark.mllib.recommendation.MatrixFactorizationModel@2531edb4\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=574","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=575","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=576","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=577","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=578","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=579","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=580","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=581","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=582","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=583","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=584","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=585","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=586","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=587","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=588","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=589","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=590","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=591","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=592","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=593","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=594","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=595","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=596","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=597","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=598","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=599","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=600","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=601","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=602","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=603","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=604","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=605","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=606","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=607","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=608","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=609","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=610","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=611","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=612","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=613","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=614","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=615","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=616","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=617","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=618","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=619","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=620","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=621"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544595189523_262332377","id":"20181212-061309_180340924","dateCreated":"2018-12-12T06:13:09+0000","dateStarted":"2018-12-12T09:15:13+0000","dateFinished":"2018-12-12T09:50:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64388"},{"text":"val ranks = List(12,20)\n    val lambdas = List(0.1,0.01)\n    val alpha = List(1,40)\n    val numIters = List(10, 15)\n    var bestModel: Option[MatrixFactorizationModel] = None\n    var bestValidationRmse = Double.MaxValue\n    var bestRank = 0\n    var bestLambda = -1.0\n    var bestNumIter = -1\n    var bestAlpha = 0\n    for (rank <- ranks; lambda <- lambdas; numIter <- numIters; alpha <- alpha) {\n      val model = ALS.trainImplicit(trainRDD, rank, numIter, lambda, alpha)\n      val validationRmse = computeRmse(model, testRDD, numTest)\n      println(\"RMSE (validation) = \" + validationRmse + \" for the model trained with rank = \"\n        + rank + \n        \", lambda = \" + lambda + \n        \", alpha = \" + alpha + \n        \", and numIter = \" + numIter + \".\")\n      if (validationRmse < bestValidationRmse) {\n        bestModel = Some(model)\n        bestValidationRmse = validationRmse\n        bestRank = rank\n        bestLambda = lambda\n        bestNumIter = numIter\n        bestAlpha = alpha\n      }\n    }\n\n    val testRmse = computeRmse(bestModel.get, testRDD, numTest)\n\n    println(\"The best model was trained with rank = \" + bestRank + \" and lambda = \" + bestLambda\n      + \", and numIter = \" + bestNumIter + \", and its RMSE on the test set is \" + testRmse + \".\")","user":"anonymous","dateUpdated":"2018-12-12T05:35:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"ranks: List[Int] = List(12, 20)\nlambdas: List[Double] = List(0.1, 0.01)\nalpha: List[Int] = List(1, 40)\nnumIters: List[Int] = List(10, 15)\nbestModel: Option[org.apache.spark.mllib.recommendation.MatrixFactorizationModel] = None\nbestValidationRmse: Double = 1.7976931348623157E308\nbestRank: Int = 0\nbestLambda: Double = -1.0\nbestNumIter: Int = -1\nbestAlpha: Int = 0\nRMSE (validation) = 751.1288744158197 for the model trained with rank = 12, lambda = 0.1, alpha = 1, and numIter = 10.\nRMSE (validation) = 747.493165660131 for the model trained with rank = 12, lambda = 0.1, alpha = 40, and numIter = 10.\nRMSE (validation) = 746.9286561845882 for the model trained with rank = 12, lambda = 0.1, alpha = 1, and numIter = 15.\nRMSE (validation) = 747.5758069451114 for the model trained with rank = 12, lambda = 0.1, alpha = 40, and numIter = 15.\nRMSE (validation) = 746.619456766447 for the model trained with rank = 12, lambda = 0.01, alpha = 1, and numIter = 10.\norg.apache.spark.SparkException: Job 213 cancelled part of cancelled job group zeppelin-2DX12C71Q-20181212-051721_1400508414\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1803)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1738)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:851)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:851)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:851)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:851)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1993)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1973)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1962)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:682)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2131)\n  at org.apache.spark.rdd.RDD$$anonfun$aggregate$1.apply(RDD.scala:1124)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)\n  at org.apache.spark.rdd.RDD.aggregate(RDD.scala:1117)\n  at org.apache.spark.ml.recommendation.ALS$.computeYtY(ALS.scala:1711)\n  at org.apache.spark.ml.recommendation.ALS$.org$apache$spark$ml$recommendation$ALS$$computeFactors(ALS.scala:1652)\n  at org.apache.spark.ml.recommendation.ALS$$anonfun$train$4.apply(ALS.scala:982)\n  at org.apache.spark.ml.recommendation.ALS$$anonfun$train$4.apply(ALS.scala:969)\n  at scala.collection.immutable.Range.foreach(Range.scala:160)\n  at org.apache.spark.ml.recommendation.ALS$.train(ALS.scala:969)\n  at org.apache.spark.mllib.recommendation.ALS.run(ALS.scala:255)\n  at org.apache.spark.mllib.recommendation.ALS$.trainImplicit(ALS.scala:428)\n  at org.apache.spark.mllib.recommendation.ALS$.trainImplicit(ALS.scala:447)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1$$anonfun$apply$mcVI$sp$2.apply$mcVI$sp(<console>:103)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1$$anonfun$apply$mcVI$sp$2.apply(<console>:102)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1$$anonfun$apply$mcVI$sp$2.apply(<console>:102)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1.apply$mcVI$sp(<console>:102)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1.apply(<console>:102)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1$$anonfun$apply$mcVD$sp$1.apply(<console>:102)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1.apply$mcVD$sp(<console>:102)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1.apply(<console>:102)\n  at $anonfun$1$$anonfun$apply$mcVI$sp$1.apply(<console>:102)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at $anonfun$1.apply$mcVI$sp(<console>:102)\n  at $anonfun$1.apply(<console>:102)\n  at $anonfun$1.apply(<console>:102)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  ... 56 elided\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=36","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=37","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=38","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=39","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=40","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=41","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=42","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=43","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=44","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=45","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=46","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=47","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=48","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=49","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=50","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=51","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=52","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=53","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=54","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=55","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=56","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=57","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=58","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=59","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=60","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=61","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=62","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=63","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=64","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=65","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=66","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=67","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=68","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=69","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=70","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=71","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=72","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=73","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=74","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=75","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=76","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=77","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=78","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=79","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=80","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=81","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=82","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=83","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=84","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=85","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=86","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=87","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=88","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=89","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=90","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=91","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=92","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=93","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=94","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=95","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=96","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=97","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=98","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=99","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=100","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=101","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=102","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=103","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=104","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=105","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=106","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=107","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=108","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=109","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=110","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=111","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=112","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=113","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=114","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=115","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=116","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=117","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=118","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=119","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=120","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=121","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=122","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=123","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=124","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=125","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=126","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=127","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=128","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=129","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=130","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=131","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=132","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=133","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=134","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=135","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=136","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=137","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=138","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=139","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=140","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=141","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=142","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=143","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=144","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=145","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=146","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=147","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=148","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=149","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=150","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=151","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=152","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=153","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=154","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=155","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=156","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=157","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=158","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=159","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=160","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=161","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=162","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=163","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=164","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=165","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=166","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=167","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=168","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=169","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=170","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=171","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=172","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=173","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=174","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=175","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=176","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=177","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=178","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=179","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=180","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=181","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=182","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=183","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=184","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=185","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=186","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=187","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=188","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=189","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=190","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=191","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=192","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=193","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=194","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=195","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=196","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=197","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=198","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=199","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=200","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=201","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=202","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=203","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=204","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=205","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=206","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=207","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=208","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=209","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=210","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=211","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=212","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=213"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544591841155_-1396604749","id":"20181212-051721_1400508414","dateCreated":"2018-12-12T05:17:21+0000","dateStarted":"2018-12-12T05:35:42+0000","dateFinished":"2018-12-12T06:12:44+0000","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:64389"},{"text":"def expectedPercentileRanking(model: MatrixFactorizationModel, ratings: RDD[Rating]) = {\r\n    val itemFactors = model.productFeatures.collect()\r\n    val itemMatrix = new DoubleMatrix(itemFactors.map(_._2))\r\n    val imBroadCast = sc.broadcast(itemMatrix)\r\n    val itemListPerUser = ratings.groupBy(_.user).map {\r\n      case (user, ratingList) => (user, ratingList.map(rt => (rt.product, rt.rating)).toArray)\r\n    }\r\n    val rankRDD = model.userFeatures.join(itemListPerUser).map {\r\n      case (userId, (userFeatures, itemRatingList)) =>\r\n        val userVector = new DoubleMatrix(userFeatures)\r\n        val scores = imBroadCast.value.mmul(userVector)\r\n\r\n        val sortedWithId = scores.data.zipWithIndex.sortBy(-_._1)\r\n        val itemsOrderedByPref = sortedWithId.map(_._2).toSeq\r\n        \r\n        val rankWeightedByRating = itemRatingList.map {\r\n          case (itemId, rating) =>\r\n            rating * itemsOrderedByPref.indexOf(itemId).toDouble / (itemsOrderedByPref.size - 1)\r\n        }.sum\r\n        rankWeightedByRating\r\n    }\r\n    val weightedRankOverAll = rankRDD.sum()\r\n    val sumWeight = ratings.map(_.rating).sum()\r\n    weightedRankOverAll / sumWeight\r\n  }","user":"anonymous","dateUpdated":"2018-12-12T09:51:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"expectedPercentileRanking: (model: org.apache.spark.mllib.recommendation.MatrixFactorizationModel, ratings: org.apache.spark.rdd.RDD[org.apache.spark.mllib.recommendation.Rating])Double\n"}]},"apps":[],"jobName":"paragraph_1544596884634_1466044087","id":"20181212-064124_280404949","dateCreated":"2018-12-12T06:41:24+0000","dateStarted":"2018-12-12T09:51:51+0000","dateFinished":"2018-12-12T09:51:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64390"},{"text":"val rank_in = expectedPercentileRanking(model, trainRDD)\r\nval rank_out = expectedPercentileRanking(model, testRDD)","user":"anonymous","dateUpdated":"2018-12-12T09:51:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rank_in: Double = 0.47871024682662733\nrank_out: Double = 0.46462744273989104\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=624","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=625","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=626","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=627","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=628","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=629"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544598031854_2031724638","id":"20181212-070031_1706859906","dateCreated":"2018-12-12T07:00:31+0000","dateStarted":"2018-12-12T09:51:59+0000","dateFinished":"2018-12-12T09:59:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64391"},{"text":"model.userFeatures.take(5)\nmodel.userFeatures.take(5)","user":"anonymous","dateUpdated":"2018-12-12T10:14:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res104: Array[(Int, Array[Double])] = Array((0,Array(0.049375467002391815, 0.14092864096164703, -0.23510758578777313, 0.4502457082271576, -0.06431248039007187, -0.07839208841323853, 0.47210246324539185, -0.5210034251213074, 0.2122528851032257, 0.12481033056974411, 0.3212595582008362, 0.21374012529850006, -0.1392381191253662, 0.17127399146556854, -0.5171093344688416, 0.21018517017364502, -0.19663378596305847, -0.5046987533569336, 0.433010071516037, -0.47728726267814636, -0.00416470505297184, 0.22647279500961304, -0.20834849774837494, -0.3746849298477173, 0.0631372258067131, 0.05833245813846588, 0.2140529304742813, 0.3265658915042877, -0.2480987310409546, 0.07081235200166702, -0.7182446122169495, -0.08277269452810287, 0.04556121304631233, 0.04850773140788078, 0.13123774528503418, 0.261798...res105: Array[(Int, Array[Double])] = Array((0,Array(0.049375467002391815, 0.14092864096164703, -0.23510758578777313, 0.4502457082271576, -0.06431248039007187, -0.07839208841323853, 0.47210246324539185, -0.5210034251213074, 0.2122528851032257, 0.12481033056974411, 0.3212595582008362, 0.21374012529850006, -0.1392381191253662, 0.17127399146556854, -0.5171093344688416, 0.21018517017364502, -0.19663378596305847, -0.5046987533569336, 0.433010071516037, -0.47728726267814636, -0.00416470505297184, 0.22647279500961304, -0.20834849774837494, -0.3746849298477173, 0.0631372258067131, 0.05833245813846588, 0.2140529304742813, 0.3265658915042877, -0.2480987310409546, 0.07081235200166702, -0.7182446122169495, -0.08277269452810287, 0.04556121304631233, 0.04850773140788078, 0.13123774528503418, 0.261798..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=633","http://ip-172-31-34-243.ec2.internal:4040/jobs/job?id=634"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1544608319117_38752056","id":"20181212-095159_667983722","dateCreated":"2018-12-12T09:51:59+0000","dateStarted":"2018-12-12T10:14:58+0000","dateFinished":"2018-12-12T10:15:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64392"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544609723241_-1024569115","id":"20181212-101523_275985230","dateCreated":"2018-12-12T10:15:23+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:64394"}],"name":"MAP","id":"2DX12C71Q","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}